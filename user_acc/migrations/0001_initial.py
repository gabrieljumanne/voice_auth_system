# Generated by Django 5.1.3 on 2024-12-05 17:16

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Email must be unique', max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Username must be alphanumeric or must contain underscore', regex='^[a-zA-Z0-9]+$')], verbose_name='user name')),
                ('fullname', models.CharField(help_text='Enter your full name as appeared on your official document', max_length=250, verbose_name='user full name')),
                ('date_of_birth', models.DateField(blank=True, help_text='Enter your age (optional) for age verification', null=True, verbose_name='date of birth')),
                ('profile_picture', models.ImageField(blank=True, help_text='Upload your image (optional)', null=True, upload_to='profile_pictures/', verbose_name='user image')),
                ('bio', models.TextField(blank=True, help_text='Tell us a bit about yourself (max 500 characters)', max_length=300, null=True, verbose_name='user bio')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user account should be treated as active', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether this user account should be treated as staff', verbose_name='staff')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user account should be treated as verified', verbose_name='verified')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp for soft deletion.', null=True, verbose_name='deleted at')),
                ('email_confirmation_token', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last_login')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last login ip')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10)], verbose_name='failed login attempts')),
                ('last_failed_login', models.DateTimeField(blank=True, null=True, verbose_name='last failed login')),
                ('account_locked_until', models.DateTimeField(blank=True, null=True, verbose_name='account locked until')),
                ('language_preferences', models.CharField(choices=[('eng', 'English'), ('swa', 'swahili'), ('fr', 'French')], default='eng', max_length=20, verbose_name='language preference')),
                ('theme_preference', models.CharField(choices=[('light', 'Light Theme'), ('dark', 'Dark theme'), ('system', 'System default')], default='system', max_length=10, verbose_name='theme preference')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
    ]
